<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-110</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///STARTUP VARIABLES

y_end=y+20
hsp=0
vsp=0

image_xscale=1.2
image_yscale=1.2

state=s.fall

death_count=0

dp=3
d=0

particle_count=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MOUSE_ITEM SETTING
if obj_host.mouse_right=true and (obj_host.mouse_item=undefined or obj_host.mouse_item=id) and position_meeting(mouse_x,mouse_y,id)
{    
    obj_host.mouse_item=id
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///STATE MACHINE

switch (state)
{    
    case s.pick:
    {                
        //Update previous variables
        xprev=x
        yprev=y
        
        //Move to mouse's position
        x=mouse_x
        y=mouse_y
        
        //Keep object in window
        x=clamp(x,view_xview,view_xview+view_wview)
        y=clamp(y,view_yview,view_yview+view_hview)
        
        //Detect if mouse let go
        if obj_host.mouse_item!=id
        {
            spd=point_distance(x,y,xprev,yprev)
            dir=point_direction(xprev,yprev,x,y)
            hsp=lengthdir_x(spd,dir)/4
            vsp=lengthdir_y(spd,dir)/4
            state=s.fall
        }  
        y_end=y+20  
        
    }break
    
    case s.fall:
    {     
        
        grav=0.4 
        
        //Check for state changing
        if obj_host.mouse_item=id {state=s.pick vsp=0 hsp=0 grav=0}
        ID=instance_place(x,y,obj_slot) if ID {vsp=0 hsp=0 grav=0}
                            
        vsp+=grav                
        x+=hsp
        y+=vsp       
        if y&gt;y_end{state=s.idle}          
    }break
    
    case s.idle:
    {
        hsp=0
        vsp=0
        if obj_host.mouse_item=id{state=s.pick}

        death_count+=1
        if death_count&gt;120{image_alpha-=0.002}
        if image_alpha=0{instance_destroy()}
    }break       
}

if state!=s.idle or obj_host.slot0.slot_item=id or obj_host.slot1.slot_item=id{death_count=0 image_alpha=1}
if obj_host.slot0.slot_item=id or obj_host.slot1.slot_item=id or obj_host.mouse_item=id{depth=-110}else{depth=-90}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///PARTICLES
particle_count+=1
if (particle_count mod 1*image_alpha)=0 and obj_host.slot0.slot_item!=id and obj_host.slot1.slot_item!=id
{
    part_emitter_region(obj_host.effect,obj_host.emit,x-25*image_xscale,x+25*image_xscale,y-25*image_yscale,y+25*image_yscale,ps_shape_rectangle,ps_distr_linear)
    
    if object_index=obj_element_fire{part_emitter_burst(obj_host.effect,obj_host.emit,obj_host.fire,1)}
    if object_index=obj_element_water{part_emitter_burst(obj_host.effect,obj_host.emit,obj_host.water,1)}
    if object_index=obj_element_ice{part_emitter_burst(obj_host.effect,obj_host.emit,obj_host.ice,1)}
    if object_index=obj_element_electric{part_emitter_burst(obj_host.effect,obj_host.emit,obj_host.electric,1)}
    if object_index=obj_element_air{part_emitter_burst(obj_host.effect,obj_host.emit,obj_host.air,1)}
    if object_index=obj_element_poison{part_emitter_burst(obj_host.effect,obj_host.emit,obj_host.poison,1)}
    if object_index=obj_element_light{part_emitter_burst(obj_host.effect,obj_host.emit,obj_host.light,1)}
    if object_index=obj_element_dark{part_emitter_burst(obj_host.effect,obj_host.emit,obj_host.dark,1)}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INTERPOLATION AND DECAY DRAWING
texture_set_interpolation(false)
image_blend=merge_colour(c_white,c_black,d/100)

if d&gt;(3-dp)*30{d-=1}

draw_self()
texture_set_interpolation(true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
