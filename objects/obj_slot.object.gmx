<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_slot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-105</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///STARTUP VARIABLES 
slot_item=undefined
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ELEMENT INTERACTION
ids=elements_touching('ids')
count=elements_touching('count')

for (i=0;i!=count;i+=1)
{    
    ID=ids[| i]
    if ID!=slot_item{break}
    ID=undefined
}

if !count{ID=undefined}

if ID
{
    if slot_item
    {
        with(slot_item)
        {
        image_xscale=1
        image_yscale=1
        current_state=s.fall
        hsp=lengthdir_x(random_range(5,20),random_range(70,110))
        vsp=lengthdir_y(random_range(5,20),random_range(70,110))
        }
    }
            
    ID.x=x
    ID.y=y
    slot_item=ID
    play_sound(snd_slot_place,0)
    if obj_host.slot0.slot_item and obj_host.slot1.slot_item{play_sound(snd_element_create,0)}
}

if slot_item
{
    if !place_meeting(x,y,slot_item) and obj_host.mouse_right and position_meeting(mouse_x,mouse_y,slot_item)
    {
        slot_item.image_xscale=1
        slot_item.image_yscale=1
        slot_item=undefined
        play_sound(snd_slot_take,0)
    }
    else
    {
        slot_item.x=x
        slot_item.y=y
        slot_item.image_xscale=obj_host.s_scale
        slot_item.image_yscale=obj_host.s_scale
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ELEMENT DECAY
if slot_item
{
    if slot_item.dp&lt;=0
    {
        with(slot_item)
        {
            instance_destroy()
            decay_particles(x,y,sprite_index,30)
        }
        slot_item=undefined
        play_sound(snd_element_decay,0)
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
