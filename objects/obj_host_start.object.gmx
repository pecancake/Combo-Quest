<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>blend=0
sway=0
menu_selection=0

positions=ds_list_create()
ds_list_add(positions,room_height/2-150)
ds_list_add(positions,room_height/2-50)
ds_list_add(positions,room_height/2+50)
ds_list_add(positions,room_height/2+150)
ds_list_add(positions,room_height/2+250)
ds_list_add(positions,room_height/2+350)

state='start_menu'

global.v_music=4
global.v_effects=10

joke_choice=0

audio_stop_all()
play_sound(snd_title,20)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>k_up=   keyboard_check_pressed(vk_up)+keyboard_check_pressed(ord('W'))
k_down= keyboard_check_pressed(vk_down)+keyboard_check_pressed(ord('S'))
k_enter=keyboard_check_pressed(vk_enter)+keyboard_check_pressed(vk_space)
k_left= keyboard_check_pressed(vk_left)+keyboard_check_pressed(ord('A'))
k_right=keyboard_check_pressed(vk_right)+keyboard_check_pressed(ord('D'))

if keyboard_check_pressed(vk_anykey)
{
    if !k_enter and !keyboard_check_pressed(vk_escape) and !k_left and !k_right
    {
        play_sound(snd_menu_navigate,0)
    }
    else if k_left
    {
        play_sound(snd_menu_down,0)
    }
    else if k_right
    {
        play_sound(snd_menu_up,0)
    }
    else
    {
        play_sound(snd_menu_select,0)
    }
}
if k_up{menu_selection-=1}
if k_down{menu_selection+=1}
if state='start_menu'{menu_selection=clamp(menu_selection,0,4)}
if state='option_menu'{menu_selection=clamp(menu_selection,0,2)}
if state='funny_joke'{menu_selection=clamp(menu_selection,4,5)}

if k_enter and state='start_menu'
{
    if menu_selection=0{room_goto(rm_main)}
    if menu_selection=1{room_goto(rm_tutorial)}
    if menu_selection=2{state='funny_joke' joke=get_joke()}
    if menu_selection=3{state='option_menu'}
    if menu_selection=4{game_end()}
}

if state='option_menu'
{
    if menu_selection=0 and k_left{global.v_music-=1}
    if menu_selection=0 and k_right{global.v_music+=1}
    if menu_selection=1 and k_left{global.v_effects-=1}
    if menu_selection=1 and k_right{global.v_effects+=1}

    global.v_music=clamp(global.v_music,0,10)
    global.v_effects=clamp(global.v_effects,0,10)
    if keyboard_check_pressed(vk_escape){state='start_menu'}
}
if state='option_menu'
{
    if menu_selection=2 and k_enter{state='start_menu'}
    if keyboard_check_pressed(vk_escape){state='start_menu'}
}

if state='funny_joke' 
{
    if menu_selection=4 and k_enter{joke=get_joke()}
    if menu_selection=5 and k_enter{state='start_menu'}
    if keyboard_check_pressed(vk_escape){state='start_menu'}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fnt(fnt_start)
draw_set_valign(fa_middle)
draw_set_halign(fa_middle)
colour=multi_merge(c_red,c_orange,c_yellow,c_green,c_blue,c_purple,blend)
col(colour)
background_colour=merge_colour(colour,c_black,0.9)

if blend=0{FadeIn=true FadeOut=false}
if blend=1{FadeIn=false FadeOut=true}
if FadeIn=true{blend+=0.002}
if FadeOut=true{blend-=0.002}

sway+=1
sway_angle = lengthdir_y(3,sway)
draw_text_transformed(room_width/2,room_height/2-350,'Combo Quest',1.5,1.5,sway_angle)

col(c_white)
draw_set_halign(fa_left)
if state='start_menu'
{
    draw_text(room_width/2-275,room_height/2-150,'Start Game')
    draw_text(room_width/2-275,room_height/2-50,'Tutorial')
    draw_text(room_width/2-275,room_height/2+50,'Funny Joke')
    draw_text(room_width/2-275,room_height/2+150,'Options')
    draw_text(room_width/2-275,room_height/2+250,'Exit')
}
if state='option_menu'
{
    draw_text(room_width/2-275,room_height/2-150,'Music  ( '+string(global.v_music)+' )')
    draw_text(room_width/2-275,room_height/2-50,'Effects  ( '+string(global.v_effects)+' )')
    draw_text(room_width/2-275,room_height/2+50,'Back')
}
if state='funny_joke'
{
    draw_set_halign(fa_middle)
    draw_text_ext_transformed(room_width/2,room_height/2-150,joke[| 0],70,1000,0.6,0.6,0)
    draw_text_ext_transformed(room_width/2,room_height/2+50,joke[| 1],70,600,0.8,0.8,0)

    draw_set_halign(fa_left)
    draw_text(room_width/2-275,room_height/2+250,'Another!')
    draw_text(room_width/2-275,room_height/2+350,'Back')
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
