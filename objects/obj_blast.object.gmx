<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale+=1
image_yscale+=1
image_alpha-=0.05

if image_alpha=0{instance_destroy()}

x=obj_player.x
y=obj_player.y

for (i=0;i!=instance_number(obj_enemy_parent);i+=1)
{
    ID=instance_find(obj_enemy_parent,i)
    if place_meeting(x,y,ID)
    {
        with(ID)
        {
            if !collision_circle(x,y,sprite_width,obj_collision,0,0)
            {
                x+=lengthdir_x(movement_speed+8,point_direction(x,y,other.x,other.y)-180)
                y+=lengthdir_y(movement_speed+8,point_direction(x,y,other.x,other.y)-180)
                if path_exists(path){path_end() path_delete(path)}
            }
        }
        if (obj_host.time mod 5)=0
        {
            ID.tint=1
            if sprite_index=spr_blast_light{if ID.light_type=false{ID.hp-=obj_host.dmg/2 sad_draw(ID.x,ID.y,obj_host.dmg/2,c_white,'-')}else{ID.hp+=obj_host.dmg/4 sad_draw(ID.x,ID.y,obj_host.dmg/4,c_green,'+')}}
            if sprite_index=spr_blast_dark{if ID.light_type=false{ID.hp+=obj_host.dmg/4 sad_draw(ID.x,ID.y,obj_host.dmg/4,c_green,'+')}else{ID.hp-=obj_host.dmg/2 sad_draw(ID.x,ID.y,obj_host.dmg/2,c_white,'-')}}
            with(ID){decay_particles(x,y,sprite_index,1)}
            with(ID){effect_create(x,y,'blood',sprite_width,sprite_height)}
        }
    }
}
for (i=0;i!=instance_number(obj_crate);i+=1)
{
    ID=instance_find(obj_crate,i)
    if place_meeting(x,y,ID)
    {
        if (obj_host.time mod 5)=0
        {
            ID.tint=1
            ID.hp-=obj_host.dmg/2
            with(ID){decay_particles(x,y,sprite_index,1)}
        }
    }
}




texture_set_interpolation(false)
draw_self()
texture_set_interpolation(true)


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
