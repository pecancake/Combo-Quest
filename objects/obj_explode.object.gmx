<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SPEED STATE AND PARTICLE SETTING
speed=20
state=s.move

image_xscale=3
image_yscale=3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///STATE MACHINE
switch(state)
{   
    case s.move:
    {
        image_alpha=1
        t_timer=60
        speed-=0.5
        if place_meeting(x,y,obj_collision) or place_meeting(x,y,obj_crate) or place_meeting(x,y,obj_enemy_parent){speed=0}
        if speed=0{state=s.tick}
        tint=0
    }break
     
    case s.tick:
    {
        play_sound(snd_explode_tick,0)
        image_alpha=1
        e_timer=120
        t_timer-=1
        if (t_timer mod 10)=0{tint=1}
        image_blend=merge_colour(c_white,c_black,tint)
        if tint&gt;0{tint-=0.1}
        if t_timer=0{state=s.explode play_sound(snd_explode_explode,0)}
    }break
    
    case s.explode:
    {
        image_alpha=0
        e_timer-=1 if e_timer=0{instance_destroy()}
        if sprite_index=spr_explode_fire{part_type_colour2(obj_host.explode,c_red,c_orange) part_type_shape(obj_host.explode,pt_shape_flare)}
        if sprite_index=spr_explode_water{part_type_colour2(obj_host.explode,c_blue,c_navy) part_type_shape(obj_host.explode,pt_shape_circle)}
        if sprite_index=spr_explode_ice{part_type_colour2(obj_host.explode,c_aqua,c_teal) part_type_shape(obj_host.explode,pt_shape_snow)}
        if sprite_index=spr_explode_electric{part_type_colour2(obj_host.explode,c_yellow,c_olive) part_type_shape(obj_host.explode,pt_shape_spark)}
        if sprite_index=spr_explode_air{part_type_colour2(obj_host.explode,c_white,c_gray) part_type_shape(obj_host.explode,pt_shape_cloud)}
        if sprite_index=spr_explode_poison{part_type_colour2(obj_host.explode,c_lime,c_green) part_type_shape(obj_host.explode,pt_shape_ring)}
        if sprite_index=spr_explode_light{part_type_colour2(obj_host.explode,c_white,c_white) part_type_shape(obj_host.explode,pt_shape_spark)}
        if sprite_index=spr_explode_dark{part_type_colour2(obj_host.explode,c_purple,c_black) part_type_shape(obj_host.explode,pt_shape_spark)}

        part_emitter_region(obj_host.effect,obj_host.emit,x-150,x+150,y-150,y+150,ps_shape_ellipse,ps_distr_gaussian)
        part_emitter_burst(obj_host.effect,obj_host.emit,obj_host.explode,1)
        explode_collision()
    }break      
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
